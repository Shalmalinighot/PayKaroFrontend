package com.cg.transaction.controller;


import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.cg.transaction.dao.TransactionDao;
import com.cg.transaction.entity.Transaction;
import com.cg.transaction.service.ITransactionService;

@RestController
@RequestMapping("/transaction")
@CrossOrigin(origins="http://localhost:3000/")
public class TransactionController {
	@Autowired
	private ITransactionService iTransactionService;
	
	
	@PostMapping("/transferMoney")
	public ResponseEntity<String> TransferMoney(@RequestBody Transaction transactionDao)
	{
		String str=iTransactionService.TransferMoney(transactionDao);
		ResponseEntity<String> responseEntity= new ResponseEntity<>(str,HttpStatus.OK);
		return responseEntity;
	}
	
	 @GetMapping("/transactionbyuserId")
	    public ResponseEntity<List<Transaction>> getAllTransaction(
	            @RequestParam int userId,
	            @RequestParam(value = "pageNumber", defaultValue = "1", required = false) int pageNumber,
	            @RequestParam(value = "pageSize", defaultValue = "5", required = false) int pageSize
	    ) {
	        List<Transaction> listTransaction = iTransactionService.getAllTransaction(userId, pageSize, pageNumber);
	        ResponseEntity<List<Transaction>> responseEntity = new ResponseEntity<>(listTransaction, HttpStatus.OK);
	        return responseEntity;
	    }
	
	 @GetMapping("/byuserId/{userId}")
	 public ResponseEntity<List<Transaction>> getAllTransactionByuserId(@PathVariable("userId") int userId)
	 {
		 
		 List<Transaction> listTransaction=iTransactionService.getAllTransactionById(userId);
		 ResponseEntity<List<Transaction>> responseEntity = new ResponseEntity<>(listTransaction, HttpStatus.OK);
	     return responseEntity;
		 
	 }

	 
	 
//
//	 @GetMapping("/getrewards/{userId}")
//	 public ResponseEntity<List<Transaction>> getAllRewardsByuserId(@PathVariable("userId") int userId)
//	 {
//		 
//		 List<Transaction> listTransaction=iTransactionService.getAllRewardsById(userId);
//		 ResponseEntity<List<Transaction>> responseEntity = new ResponseEntity<>(listTransaction, HttpStatus.OK);
//	     return responseEntity;
//		 
//	 }

	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
}
